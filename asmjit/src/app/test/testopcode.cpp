// [AsmJit]
// Complete JIT Assembler for C++ Language.
//
// [License]
// Zlib - See COPYING file in this package.

// This file is used to test opcodes generated by AsmJit. Output can be
// disassembled in your IDE or by your favourite disassembler. Instructions
// are sorted alphabetically.

// [Dependencies - AsmJit]
#include <asmjit/asmjit.h>

// [Dependencies - Test]
#include "genopcode.h"

// [Dependencies - C]
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef void (*VoidFunc)(void);

int main(int argc, char* argv[]) {
  using namespace asmjit;
  using namespace asmjit::host;

  FileLogger logger(stdout);
  logger.setOption(kLoggerOptionBinaryForm, true);

  JitRuntime runtime;
  Assembler a(&runtime);

  a.setLogger(&logger);
  asmgen::opcode(a);

  VoidFunc p = asmjit_cast<VoidFunc>(a.make());
  p();
  runtime.release(p);

  return 0;
}
